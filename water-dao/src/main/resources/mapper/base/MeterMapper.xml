<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.loyalove.water.dao.base.MeterMapper">
  <resultMap id="BaseResultMap" type="com.loyalove.water.pojo.MeterPO">
    <id column="meter_id" jdbcType="INTEGER" property="meterId" />
    <result column="meter_no" jdbcType="VARCHAR" property="meterNo" />
    <result column="firm_id" jdbcType="INTEGER" property="firmId" />
    <result column="type_code" jdbcType="VARCHAR" property="typeCode" />
    <result column="caliber" jdbcType="VARCHAR" property="caliber" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="module_no" jdbcType="VARCHAR" property="moduleNo" />
    <result column="rate" jdbcType="VARCHAR" property="rate" />
    <result column="purpose" jdbcType="VARCHAR" property="purpose" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="lng" jdbcType="VARCHAR" property="lng" />
    <result column="lat" jdbcType="VARCHAR" property="lat" />
    <result column="release_date" jdbcType="TIMESTAMP" property="releaseDate" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    meter_id, meter_no, firm_id, type_code, caliber, version, module_no, rate, purpose, 
    address, lng, lat, release_date, create_user, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.loyalove.water.pojo.MeterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from meter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart > -1 and limit > -1">
      limit ${limitStart} , ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from meter
    where meter_id = #{meterId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from meter
    where meter_id = #{meterId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.loyalove.water.pojo.MeterExample">
    delete from meter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.loyalove.water.pojo.MeterPO">
    <selectKey keyProperty="meterId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into meter (meter_no, firm_id, type_code, 
      caliber, version, module_no, 
      rate, purpose, address, 
      lng, lat, release_date, 
      create_user, create_time, update_time
      )
    values (#{meterNo,jdbcType=VARCHAR}, #{firmId,jdbcType=INTEGER}, #{typeCode,jdbcType=VARCHAR}, 
      #{caliber,jdbcType=VARCHAR}, #{version,jdbcType=VARCHAR}, #{moduleNo,jdbcType=VARCHAR}, 
      #{rate,jdbcType=VARCHAR}, #{purpose,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{lng,jdbcType=VARCHAR}, #{lat,jdbcType=VARCHAR}, #{releaseDate,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.loyalove.water.pojo.MeterPO">
    <selectKey keyProperty="meterId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into meter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="meterNo != null">
        meter_no,
      </if>
      <if test="firmId != null">
        firm_id,
      </if>
      <if test="typeCode != null">
        type_code,
      </if>
      <if test="caliber != null">
        caliber,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="moduleNo != null">
        module_no,
      </if>
      <if test="rate != null">
        rate,
      </if>
      <if test="purpose != null">
        purpose,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="lng != null">
        lng,
      </if>
      <if test="lat != null">
        lat,
      </if>
      <if test="releaseDate != null">
        release_date,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="meterNo != null">
        #{meterNo,jdbcType=VARCHAR},
      </if>
      <if test="firmId != null">
        #{firmId,jdbcType=INTEGER},
      </if>
      <if test="typeCode != null">
        #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="caliber != null">
        #{caliber,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="moduleNo != null">
        #{moduleNo,jdbcType=VARCHAR},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=VARCHAR},
      </if>
      <if test="purpose != null">
        #{purpose,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="lng != null">
        #{lng,jdbcType=VARCHAR},
      </if>
      <if test="lat != null">
        #{lat,jdbcType=VARCHAR},
      </if>
      <if test="releaseDate != null">
        #{releaseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.loyalove.water.pojo.MeterExample" resultType="java.lang.Long">
    select count(*) from meter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update meter
    <set>
      <if test="record.meterId != null">
        meter_id = #{record.meterId,jdbcType=INTEGER},
      </if>
      <if test="record.meterNo != null">
        meter_no = #{record.meterNo,jdbcType=VARCHAR},
      </if>
      <if test="record.firmId != null">
        firm_id = #{record.firmId,jdbcType=INTEGER},
      </if>
      <if test="record.typeCode != null">
        type_code = #{record.typeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.caliber != null">
        caliber = #{record.caliber,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.moduleNo != null">
        module_no = #{record.moduleNo,jdbcType=VARCHAR},
      </if>
      <if test="record.rate != null">
        rate = #{record.rate,jdbcType=VARCHAR},
      </if>
      <if test="record.purpose != null">
        purpose = #{record.purpose,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.lng != null">
        lng = #{record.lng,jdbcType=VARCHAR},
      </if>
      <if test="record.lat != null">
        lat = #{record.lat,jdbcType=VARCHAR},
      </if>
      <if test="record.releaseDate != null">
        release_date = #{record.releaseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update meter
    set meter_id = #{record.meterId,jdbcType=INTEGER},
      meter_no = #{record.meterNo,jdbcType=VARCHAR},
      firm_id = #{record.firmId,jdbcType=INTEGER},
      type_code = #{record.typeCode,jdbcType=VARCHAR},
      caliber = #{record.caliber,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=VARCHAR},
      module_no = #{record.moduleNo,jdbcType=VARCHAR},
      rate = #{record.rate,jdbcType=VARCHAR},
      purpose = #{record.purpose,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      lng = #{record.lng,jdbcType=VARCHAR},
      lat = #{record.lat,jdbcType=VARCHAR},
      release_date = #{record.releaseDate,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.loyalove.water.pojo.MeterPO">
    update meter
    <set>
      <if test="meterNo != null">
        meter_no = #{meterNo,jdbcType=VARCHAR},
      </if>
      <if test="firmId != null">
        firm_id = #{firmId,jdbcType=INTEGER},
      </if>
      <if test="typeCode != null">
        type_code = #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="caliber != null">
        caliber = #{caliber,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="moduleNo != null">
        module_no = #{moduleNo,jdbcType=VARCHAR},
      </if>
      <if test="rate != null">
        rate = #{rate,jdbcType=VARCHAR},
      </if>
      <if test="purpose != null">
        purpose = #{purpose,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="lng != null">
        lng = #{lng,jdbcType=VARCHAR},
      </if>
      <if test="lat != null">
        lat = #{lat,jdbcType=VARCHAR},
      </if>
      <if test="releaseDate != null">
        release_date = #{releaseDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where meter_id = #{meterId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.loyalove.water.pojo.MeterPO">
    update meter
    set meter_no = #{meterNo,jdbcType=VARCHAR},
      firm_id = #{firmId,jdbcType=INTEGER},
      type_code = #{typeCode,jdbcType=VARCHAR},
      caliber = #{caliber,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      module_no = #{moduleNo,jdbcType=VARCHAR},
      rate = #{rate,jdbcType=VARCHAR},
      purpose = #{purpose,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      lng = #{lng,jdbcType=VARCHAR},
      lat = #{lat,jdbcType=VARCHAR},
      release_date = #{releaseDate,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where meter_id = #{meterId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.loyalove.water.pojo.MeterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from meter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>